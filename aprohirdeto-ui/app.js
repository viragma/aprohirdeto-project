document.addEventListener('DOMContentLoaded', () => {

    console.log("=== DIAGNOSZTIKAI M√ìD IND√çTVA ===");
    console.log("Ha ezt l√°tod, az 'app.js' sikeresen bet√∂lt≈ëd√∂tt.");

    // === BE√ÅLL√çT√ÅSOK ===
    const API_URL = 'http://beadando-lb-555305300.eu-central-1.elb.amazonaws.com/api/ads';
    const S3_BUCKET_URL = 'https://beadando-kepek-w4pp9o.s3.eu-central-1.amazonaws.com/';
    // === BE√ÅLL√çT√ÅSOK V√âGE ===

    const adForm = document.getElementById('ad-form');
    const adsList = document.getElementById('ads-list');
    const messageArea = document.getElementById('message-area');
    const submitButton = document.getElementById('submit-button');

    // --- 1. Hirdet√©sek bet√∂lt√©se ---
    async function loadAds() {
        console.log("[DIAG] 1. 'loadAds' f√ºggv√©ny elindult.");
        adsList.innerHTML = '<p class="loading-text">üêÑ Bet√∂lt√©s...</p>';
        
        try {
            const response = await fetch(API_URL);
            console.log(`[DIAG] 2. 'fetch' v√°lasz meg√©rkezett. St√°tusz: ${response.status}`);
            
            if (!response.ok) {
                console.error("!!! HIBA: A h√°l√≥zati k√©r√©s nem volt sikeres!");
                throw new Error(`H√°l√≥zati hiba: ${response.status}`);
            }
            
            // Extra l√©p√©s: Nyers sz√∂veg kiolvas√°sa
            const rawText = await response.text();
            console.log("[DIAG] 3. Nyers v√°lasz a szerverr≈ël:", rawText);

            // K√©zi JSON feldolgoz√°s, hogy itt kapjuk el a hib√°t
            let ads;
            try {
                ads = JSON.parse(rawText);
                console.log("[DIAG] 4. JSON feldolgoz√°s sikeres. Adat:", ads);
            } catch (jsonError) {
                console.error("!!! S√öLYOS HIBA: A szerver v√°lasza nem √©rv√©nyes JSON!", jsonError);
                adsList.innerHTML = `<p class="empty-text" style="color:red;">‚ùå Hiba: A szerver v√°lasza hib√°s form√°tum√∫ volt.</p>`;
                return; // Le√°llunk
            }

            // Ellen≈ërizz√ºk, hogy t√∂mb-e √©s van-e benne adat
            if (Array.isArray(ads) && ads.length > 0) {
                console.log(`[DIAG] 5. √ârv√©nyes adatot tal√°ltam (${ads.length} db). Kirajzol√°s kezd≈ëdik.`);
                
                // EZ A PONT, AMIKOR "ELT≈∞NIK" A TARTALOM
                console.log("[DIAG] 6. 'Bet√∂lt√©s...' sz√∂veg elt√°vol√≠t√°sa.");
                adsList.innerHTML = ''; 
                
                try {
                    console.log("[DIAG] 7. 'forEach' ciklus ind√≠t√°sa a hirdet√©sek kirajzol√°s√°hoz...");
                    ads.forEach((ad, index) => {
                        console.log(`[DIAG] 7a. Ciklus (${index+1}/${ads.length}): Adat feldolgoz√°sa:`, ad);
                        
                        if (!ad || typeof ad.id === 'undefined') {
                            console.warn(`[DIAG] 7b. HIBA: A(z) ${index}. elem hib√°s, 'id' hi√°nyzik. Kihagyom.`);
                            return; // Kihagyja a hib√°s elemet
                        }

                        const card = createAdCard(ad);
                        console.log(`[DIAG] 7c. HTML k√°rtya elk√©sz√ºlt a(z) ${ad.id} ID-hez.`);
                        adsList.appendChild(card);
                    });
                    console.log("[DIAG] 8. 'forEach' ciklus sikeresen lefutott. A hirdet√©seknek l√°tszaniuk kell.");
                    
                } catch (renderError) {
                    // Ez a 'catch' kapja el, ha a 'createAdCard' vagy az 'appendChild' elsz√°ll
                    console.error("!!! S√öLYOS HIBA a kirajzol√°si ciklusban (forEach):", renderError);
                    adsList.innerHTML = `<p class="empty-text" style="color:red;">‚ùå Hiba a hirdet√©sek feldolgoz√°sa k√∂zben: ${renderError.message}</p>`;
                }

            } else {
                // Ez fut le, ha az 'ads' √ºres t√∂mb: []
                console.log("[DIAG] 5. A szerver √ºres list√°t k√ºld√∂tt. Nincs hirdet√©s.");
                adsList.innerHTML = '<p class="empty-text">üåæ M√©g senki sem √°rul semmit!</p>';
            }

        } catch (error) {
            // Ez a 'catch' kapja el, ha a 'fetch' h√≠v√°s elsz√°ll (pl. h√°l√≥zati hiba)
            console.error('!!! S√öLYOS HIBA a hirdet√©sek bet√∂lt√©sekor:', error);
            adsList.innerHTML = `<p class="empty-text" style="color:red;">‚ùå Hiba: ${error.message}</p>`;
        }
    }

    // --- 2. Hirdet√©s k√°rtya l√©trehoz√°sa ---
    function createAdCard(ad) {
        const card = document.createElement('div');
        card.className = 'ad-card';

        let imageHtml = '';
        const imageKey = ad.thumbnail_url || ad.image_url;
        const title = ad.ad_title || 'Nincs c√≠m';
        const price = ad.price || '√År megegyez√©s szerint';
        const seller = ad.seller_name || 'Ismeretlen elad√≥';

        if (imageKey) {
            const fullImageUrl = S3_BUCKET_URL + imageKey;
            imageHtml = `<img src="${fullImageUrl}" alt="${title}" class="ad-image">`;
        }

        card.innerHTML = `
            ${imageHtml}
            <div class="ad-content">
                <h3>${title}</h3>
                <p class="ad-price">${price}</p>
                <p class="ad-seller">Elad√≥: ${seller}</p>
            </div>
        `;
        return card;
    }

    // --- 3. ≈∞rlap elk√ºld√©se (V√ÅLTOZATLAN) ---
    adForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        showMessage(null);
        submitButton.disabled = true;
        submitButton.textContent = '‚è≥ Felt√∂lt√©s...';
        const formData = new FormData(adForm);
        try {
            const response = await fetch(API_URL, { method: 'POST', body: formData });
            if (!response.ok) {
                const errorData = await response.json().catch(() => ({ message: 'Ismeretlen hiba' }));
                throw new Error(errorData.message || `Hiba: ${response.status}`);
            }
            showMessage('‚úÖ Sikeresen feladva!', 'success');
            adForm.reset();
            loadAds();
        } catch (error) {
            console.error('Hiba a hirdet√©s felad√°sakor:', error);
            showMessage(`‚ùå Hiba: ${error.message}`, 'error');
        } finally {
            submitButton.disabled = false;
            submitButton.textContent = 'üêñ Fel a port√©k√°val!';
        }
    });

    // --- Seg√©df√ºggv√©ny: √úzenet megjelen√≠t√©se (V√ÅLTOZATLAN) ---
    function showMessage(message, type) {
        messageArea.innerHTML = '';
        if (!message) { messageArea.style.display = 'none'; return; }
        messageArea.textContent = message;
        messageArea.className = `message ${type}`;
        messageArea.style.display = 'block';
    }

    // --- Ind√≠t√°s ---
    console.log("[DIAG] 'DOMContentLoaded' esem√©ny lefutott, 'loadAds' ind√≠t√°sa...");
    loadAds();
});